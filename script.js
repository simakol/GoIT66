//* Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ["python", "javascript", "c++", "haskel", "php", "ruby"];

// const langsSorted = langs.sort();
// console.log("üöÄ ~ langsSorted", langsSorted);

// for (const i in langs) {
//   let wasSwap = false;
//   for (let j = 0; j < langs.length - 1 - i; j++) {
//     if (langs[j].charCodeAt(0) > langs[j + 1].charCodeAt(0)) {
//       const swap = langs[j];
//       langs[j] = langs[j + 1];
//       langs[j + 1] = swap;
//       wasSwap = true;
//     }
//     if (!wasSwap) break;
//   }
// }

// console.log(langs);

//! ============

// const arr = ["first", "second"];

// console.log(arr);

// const swap = arr[0]; // "first"
// arr[0] = arr[1]; // ["second", "second"]
// arr[1] = swap; //  ["second", "first"]

// console.log(arr);

//! ============
//   —è–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –æ–±—î–∫—Ç —á–µ—Ä–µ–∑ for in –≤ –º–∞—Å–∏–≤

// const apartment = {
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
// };
// const keys = [];
// const values = [];

// for (const key in apartment) {
//   keys.push(key);
//   values.push(apartment[key]);
// }

// console.log(keys, values);

//! ============

//* Example 1 - –û—Å–Ω–æ–≤–∏ –æ–±'—î–∫—Ç—ñ–≤
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –¥–ª—è –æ–±'—î–∫—Ç–∞ user, –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:

// –¥–æ–¥–∞—î –ø–æ–ª–µ mood –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'happy'
// –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è hobby –Ω–∞ 'skydiving'
// –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è premium –Ω–∞ false
// –≤–∏–≤–æ–¥–∏—Ç—å –≤–º—ñ—Å—Ç –æ–±'—î–∫—Ç–∞ user —É —Ñ–æ—Ä–º–∞—Ç—ñ –∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ Object.keys() —Ç–∞ for...of

// const user = {
//   name: "Mango",
//   age: 20,
//   hobby: "html",
//   premium: true,
// };

// user.mood = "happy";
// user.hobby = "skydiving";
// user.premium = false;

// console.table(user);

// const userKeys = Object.keys(user);
// console.log("üöÄ ~ userKeys", userKeys);

// for (const key of userKeys) {
//   console.log(`${key}: ${user[key]}`);
// }

//! ============

//* Example 2 - –º–µ—Ç–æ–¥ Object.values()
// –£ –Ω–∞—Å —î –æ–±'—î–∫—Ç, –¥–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –∑–∞—Ä–ø–ª–∞—Ç–∏ –Ω–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏. –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥ –¥–ª—è –ø—ñ–¥—Å—É–º–æ–≤—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞—Ä–ø–ª–∞—Ç —ñ –∑–±–µ—Ä–µ–∂—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É –∑–º—ñ–Ω–Ω—ñ–π sum. –ü–æ–≤–∏–Ω–Ω–æ –≤–∏–π—Ç–∏ 390. –Ø–∫—â–æ –æ–±'—î–∫—Ç salaries –ø–æ—Ä–æ–∂–Ω—ñ–π, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—î –±—É—Ç–∏ 0.

// const salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130,
// };

// const salariesArr = Object.values(salaries);

// let sum = 0;

// for (const salary of salariesArr) {
//   sum += salary;
// }

// console.log(sum);

//! ============

//* Example 3 - –ú–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calcTotalPrice(stones, stoneName), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —Ç–∞ —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é –∫–∞–º–µ–Ω—é. –§—É–Ω–∫—Ü—ñ—è —Ä–∞—Ö—É—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–∞–º—ñ–Ω–Ω—è –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑ –æ–±'—î–∫—Ç–∞

// const stones = [
//   { name: "–°–º–∞—Ä–∞–≥–¥", price: 1300, quantity: 4 },
//   { name: "–î—ñ–∞–º–∞–Ω—Ç", price: 2700, quantity: 3 },
//   { name: "–°–∞–ø—Ñ—ñ—Ä", price: 400, quantity: 7 },
//   { name: "–©–µ–±—ñ–Ω—å", price: 200, quantity: 2 },
// ];

// console.log(calcTotalPrice(stones, "–î—ñ–∞–º–∞–Ω—Ç"));
// console.log(calcTotalPrice(stones, "–©–µ–±—ñ–Ω—å"));

// function calcTotalPrice(stones, stoneName) {
//   // 1. —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–º—ñ–Ω–Ω—É, –∫—É–¥–∏ –º–∏ –±—É–¥–µ–º–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å—É–º—É
//   // 2. —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ü–∏–∫–ª for of —Ç–∞ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –∫–æ–∂–Ω–æ–º—É –æ–± º—î–∫—Ç—É
//   // 3. –í–∏–±—Ä–∞—Ç–∏ –æ–± º—î–∫—Ç —É —è–∫–æ–≥–æ –ø–æ–ª–µ name —Å–ø—ñ–≤–ø–∞–¥–∞—î –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º stoneName
//   // 4. –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—å –ø–æ–º–Ω–æ–∂–∏–≤—à–∏ —Ü—ñ–Ω—É –Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å

//   //   let totalPrice = 0;

//   for (const stone of stones) {
//     if (stone.name === stoneName) {
//       //   totalPrice = stone.price * stone.quantity;
//       return stone.price * stone.quantity;
//     }
//   }

//   //   return totalPrice;
// }

//! ============

//* Example 4 - –ö–æ–º–ø–ª–µ–∫—Å–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –æ—Å–æ–±–∏—Å—Ç–∏–º –∫–∞–±—ñ–Ω–µ—Ç–æ–º —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–Ω–∫—É. –Ñ –æ–±'—î–∫—Ç account –≤ —è–∫–æ–º—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–ª–∞–Ω—Å–æ–º —Ç–∞ —ñ—Å—Ç–æ—Ä—ñ—î—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.

/*
 * –¢–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –≤—Å—å–æ–≥–æ –¥–≤–∞.
 * –ú–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ —á–∏ –∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ –∑ —Ä–∞—Ö—É–Ω–∫—É.
 */
const transactionTypes = {
  DEPOSIT: "deposit",
  WITHDRAW: "withdraw",
};

/*
 * –ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type —Ç–∞ amount
 */

const account = {
  // –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É
  balance: 0,

  // –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
  transactions: [],

  /*
   * –ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   */
  createTransaction(amount, type) {
    // 1. –°—Ç–≤–æ—Ä—é—î –æ–± º—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ –ø–æ–ª—è–º–∏ id, amount, type
    // 2. –í —è–∫–æ—Å—Ç—ñ –ø–æ–ª—è id –∑–∞–¥–∞–º–æ –¥–æ–≤–∂–∏–Ω—É –º–∞—Å–∏–≤—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    return {
      id: this.transactions.length,
      amount,
      type,
    };
  },

  /*
   * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É–º–∏ –¥–æ –±–∞–ª–∞–Ω—Å—É.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
   * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
   */
  deposit(amount) {
    this.balance += amount;
    const transaction = this.createTransaction(
      amount,
      transactionTypes.DEPOSIT
    );
    this.transactions.push(transaction);
  },

  /*
   * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–Ω—è—Ç—Ç—è —Å—É–º–∏ –∑ –±–∞–ª–∞–Ω—Å—É.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
   * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.
   *
   * –Ø–∫—â–æ amount –±—ñ–ª—å—à–µ –Ω—ñ–∂ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å, –≤–∏–≤–æ–¥—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   * –ø—Ä–æ —Ç–µ, —â–æ –∑–Ω—è—Ç—Ç—è —Ç–∞–∫–æ—ó —Å—É–º–∏ –Ω–µ –º–æ–∂–ª–∏–≤–µ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.
   */
  withdraw(amount) {
    if (amount > this.balance) {
      console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤");
      return false;
    }
    this.balance -= amount;
    const transaction = this.createTransaction(
      amount,
      transactionTypes.WITHDRAW
    );
    this.transactions.push(transaction);
  },

  /*
   * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
   */
  getBalance() {
    return this.balance;
  },

  /*
   * –ú–µ—Ç–æ–¥ —à—É–∫–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–æ id
   */
  getTransactionDetails(id) {
    for (const transaction of this.transactions) {
      if (id === transaction.id) return transaction;
    }
  },

  /*
   * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—à—Ç—ñ–≤
   * –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —É—Å—ñ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
   */
  getTransactionTotal(type) {
    let total = 0;
    for (const transaction of this.transactions) {
      if (type === transaction.type) total += transaction.amount;
    }
    return total;
  },
};

console.log(account.getBalance());

account.deposit(500);

console.log(account.getBalance());

account.withdraw(200);
account.withdraw(500);

account.deposit(1000);

account.withdraw(100);
account.withdraw(300);
account.withdraw(200);

console.log(account.getBalance());

console.log(account.getTransactionDetails(1));

console.log(account.getTransactionTotal(transactionTypes.WITHDRAW));
console.log(account.getTransactionTotal(transactionTypes.DEPOSIT));

console.log(account);
